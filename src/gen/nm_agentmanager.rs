// This code was autogenerated with `dbus-codegen-rust -m None`, see https://github.com/diwic/dbus-rs
use dbus::arg;
use dbus::blocking;

pub trait OrgFreedesktopNetworkManagerAgentManager {
    fn register(&self, identifier: &str) -> Result<(), dbus::Error>;
    fn register_with_capabilities(
        &self,
        identifier: &str,
        capabilities: u32,
    ) -> Result<(), dbus::Error>;
    fn unregister(&self) -> Result<(), dbus::Error>;
}

impl<'a, C: ::std::ops::Deref<Target = blocking::SyncConnection>>
    OrgFreedesktopNetworkManagerAgentManager for blocking::Proxy<'a, C>
{
    fn register(&self, identifier: &str) -> Result<(), dbus::Error> {
        self.method_call(
            "org.freedesktop.NetworkManager.AgentManager",
            "Register",
            (identifier,),
        )
    }

    fn register_with_capabilities(
        &self,
        identifier: &str,
        capabilities: u32,
    ) -> Result<(), dbus::Error> {
        self.method_call(
            "org.freedesktop.NetworkManager.AgentManager",
            "RegisterWithCapabilities",
            (identifier, capabilities),
        )
    }

    fn unregister(&self) -> Result<(), dbus::Error> {
        self.method_call(
            "org.freedesktop.NetworkManager.AgentManager",
            "Unregister",
            (),
        )
    }
}
